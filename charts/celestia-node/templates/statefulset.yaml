{{- $label := include "celestiaNode.baseLabel" . }}
{{- $image := tpl "{{ .Values.image.registry }}/{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $label }}
  labels:
    app: {{ $label }}
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.global.replicaCount }}
  selector:
    matchLabels:
      app: {{ $label }}
  template:
    metadata:
      name: {{ $label }}
      labels:
        app: {{ $label }}
    spec:
      initContainers:
        - name: init-{{ $label }}
          image: {{ $image }}
          command: [/bin/celestia, "{{ .Values.config.type }}", init]
          args:
            - --node.store
            - /celestia
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: {{ $label }}-vol
              mountPath: /celestia
      containers:
        - name: {{ $label }}
          image: {{ $image }}
          command: [/bin/celestia, "{{ .Values.config.type }}", start]
          args:
            - --node.store
            - /celestia
            - --core.ip
            - {{ .Values.config.coreIp }}
            - --p2p.network
            - {{ .Values.config.network }}
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
          {{- if .Values.ports }}
          ports:
          {{- range $name, $port := .Values.ports }}
            - containerPort: {{ $port }}
              name: {{ $name }}
              protocol: TCP
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: {{ $label }}-vol
              mountPath: /celestia
            - name: {{ $label }}-files-volume
              mountPath: /celestia/config.toml
              subPath: config.toml
            {{- if .Values.secretProvider.enabled }}
            {{- range $index, $secret := .Values.secretProvider.secrets }}
            - name: {{ $secret.name }}
              mountPath: /celestia/{{ $secret.mountPath }}/{{ $secret.filename }}
              subPath: {{ $secret.filename }}
            {{- end }}
            {{- end }}
      volumes:
        # ------------ INIT  SCRIPT -------------
        - name: {{ $label }}-scripts-volume
          configMap:
            defaultMode: 0744
            name: {{ $label }}-scripts-vol
        # ------------ Config file -------------
        - name: {{ $label }}-files-volume
          configMap:
            name: {{ $label }}-files-env
            defaultMode: 420
        # ------------ Primary storage -------------
        - name: {{ $label }}-vol
          {{- if .Values.storage.enabled }}
          persistentVolumeClaim:
            claimName: {{ $label }}-storage-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        # ------------ Celestia keys, if provided -------------
        {{- if .Values.secretProvider.enabled }}
        {{- range $index, $secret := .Values.secretProvider.secrets }}
        - name: {{ $secret.name }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $secret.name }}
        {{- end }}
        {{- end }}
