{{/* We need to manually create a PersistentVolume when local. */}}
{{/* In prod, a PV will be created by the StorageClass' provisioner using dynamic provisioning feature.  */}}

{{ range $key, $value := .Values.storage }}

{{- if eq $value.type "local" }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $.Values.rollupName }}-{{ $value.persistentVolumeName }}-pv
spec:
  capacity:
    storage: {{ $value.size }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ $.Values.rollupName }}-{{ $value.storageClassName }}
  local:
    path: {{ $value.path }}
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - astria-dev-cluster-control-plane
---
{{- end }}

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $.Values.rollupName }}-{{ $value.persistentVolumeName }}-pvc
  namespace: astria-dev-cluster
  labels:
    "app.kubernetes.io/name": "{{ $.Values.rollupName }}-{{ $.Chart.Name }}"
    "app.kubernetes.io/managed-by": {{ $.Release.Service | quote }}
    "helm.sh/chart": {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
spec:
  storageClassName: "{{ $.Values.rollupName }}-{{ $value.storageClassName }}"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ $value.size }}
---
{{ end }}
