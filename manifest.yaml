NAME: cl-test
LAST DEPLOYED: Wed Aug  9 13:04:27 2023
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
evmChainId: astria
evmNetworkId: 912559
genesisAllocAddress: 0xaC21B97d35Bf75A7dAb16f35b111a50e78A72F30
ports:
  blockscout: 4000
  executionGRPC: 50051
  faucet: 8080
  gossipnet: 2451
  jsonRPC: 8545
  wsRPC: 8546
privateKey: 8b3a7999072c9c9314c084044fe705db11714c6c4ed7cddb64da18ea270dd203
rollupName: astria
storage:
  blockscout-postgres:
    path: /data/rollup-data/blockscout/postgres
    persistentVolumeName: blockscout-postgres
    size: 2Gi
    storageClassName: blockscout-postgres-storage-local
    type: local
  blockscout-redis:
    path: /data/rollup-data/blockscout/redis
    persistentVolumeName: blockscout-redis
    size: 2Gi
    storageClassName: blockscout-redis-storage-local
    type: local
  executor:
    path: /data/rollup-data/executor
    persistentVolumeName: executor
    size: 2Gi
    storageClassName: executor-storage-local
    type: local

HOOKS:
MANIFEST:
---
# Source: rollup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: astria-conductor-env
  namespace: astria-dev-cluster
data:
  executor_host_grpc_port: "50051"
  gossipnet_port: "2451"
  cometbft_rpc_endpoint: "http://sequencer-service:26657"
  celestia_node_url: "http://celestia-service:26658"
  evm_chain_id: "astria"
---
# Source: rollup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: astria-conductor-scripts
  namespace: astria-dev-cluster
data:
  start-conductor.sh: |
    #!/bin/bash
    
    set -o errexit -o nounset -o pipefail
    
    # request token from http://celestia-token.astria.localdev.me/ and save to SequencerRelayerConfig.toml
    
    # FIXME - how to use `token-svc` port here instead of hardcoding?
    BEARER_TOKEN=$(wget -qO- http://celestia-service:5353)
    
    if [ -z "$BEARER_TOKEN" ]; then
        echo "Failed to fetch the Celestia bearer token."
        exit 1
    fi
    
    echo "Celestia Bearer token fetched successfully."
    
    export ASTRIA_celestia_bearer_token="$BEARER_TOKEN"
    
    /usr/local/bin/astria-conductor \
      --tendermint-url=$cometbft_rpc_endpoint \
      --celestia-node-url=$celestia_node_url \
      --chain-id=$evm_chain_id \
      --libp2p-port=$gossipnet_port \
      --execution-rpc-url=http://localhost:$executor_host_grpc_port \
      --bootnodes=/ip4/192.168.65.120/tcp/33900/p2p/12D3KooWJGy9JbZyi4JLF2PsBsuUm8Jn72qrHiQ5it5wygAAvHYb
---
# Source: rollup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: astria-composer-env
  namespace: astria-dev-cluster
data:
  ASTRIA_COMPOSER_LOG: "astria_composer=debug"
  ASTRIA_COMPOSER_API_LISTEN_ADDR: "0.0.0.0:0"
  ASTRIA_COMPOSER_SEQUENCER_URL: "http://sequencer-service:26657"
  ASTRIA_COMPOSER_CHAIN_ID: "astria"
  ASTRIA_COMPOSER_EXECUTION_URL: "ws://127.0.0.1:8546"
---
# Source: rollup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: astria-geth-env
  namespace: astria-dev-cluster
data:
  home_dir: "/home/geth"
  data_dir: "/home/geth/astriageth"
  executor_host_http_port: "8545"
  executor_host_grpc_port: "50051"
  executor_host_ws_port: "8546"
  genesis_alloc_address: "0xaC21B97d35Bf75A7dAb16f35b111a50e78A72F30"
  evm_network_id: "912559"
  evm_chain_id: "astria"
  cometbft_rpc_endpoint: "http://sequencer-service:26657"
---
# Source: rollup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: astria-executor-scripts
  namespace: astria-dev-cluster
data:
  geth-genesis.json: |
    {
        "config": {
            "chainId": 912559,
            "homesteadBlock": 0,
            "eip150Block": 0,
            "eip155Block": 0,
            "eip158Block": 0,
            "byzantiumBlock": 0,
            "constantinopleBlock": 0,
            "petersburgBlock": 0,
            "istanbulBlock": 0,
            "berlinBlock": 0,
            "londonBlock": 0,
            "terminalTotalDifficulty": 0,
            "ethash": {}
        },
        "difficulty": "10000000",
        "gasLimit": "8000000",
        "alloc": {
            "0xaC21B97d35Bf75A7dAb16f35b111a50e78A72F30": { "balance": "300000000000000000000" }
        }
    }
    
  init-geth.sh: |
    #!/bin/bash
    
    set -o errexit -o nounset
    
    geth --datadir $data_dir/ init /scripts/geth-genesis.json
    
  start-geth.sh: |
    #!/bin/bash
    
    set -o errexit -o nounset
    
    export CHAIN_ID=$evm_chain_id
    export COMETBFT_RPC_ENDPOINT=$cometbft_rpc_endpoint
    
    geth --datadir $data_dir/ --networkid=$evm_network_id \
      --http --http.addr "0.0.0.0" --http.port $executor_host_http_port --http.corsdomain='*' --http.vhosts "*" --http.api eth,net,web3,debug \
      --ws --ws.addr "0.0.0.0" --ws.port $executor_host_ws_port --ws.origins='*' \
      --grpc --grpc.addr "0.0.0.0" --grpc.port $executor_host_grpc_port
---
# Source: rollup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: astria-blockscout-env
  namespace: astria-dev-cluster
data:
  ACCOUNT_CLOAK_KEY: ""
  ACCOUNT_ENABLED: "false"
  ACCOUNT_REDIS_URL: "redis://localhost:6379"
  API_RATE_LIMIT: "50"
  API_RATE_LIMIT_BY_IP: "3000"
  API_RATE_LIMIT_BY_IP_TIME_INTERVAL: "5m"
  API_RATE_LIMIT_BY_KEY: "50"
  API_RATE_LIMIT_BY_WHITELISTED_IP: "50"
  API_RATE_LIMIT_STATIC_API_KEY: ""
  API_RATE_LIMIT_TIME_INTERVAL: "1s"
  API_RATE_LIMIT_UI_V2_TOKEN_TTL_IN_SECONDS: "18000"
  API_RATE_LIMIT_UI_V2_WITH_TOKEN: "5"
  API_RATE_LIMIT_WHITELISTED_IPS: ""
  API_V1_READ_METHODS_DISABLED: "false"
  API_V1_WRITE_METHODS_DISABLED: "false"
  APPS_MENU: "true"
  BLOCK_TRANSFORMER: "base"
  BLOCKSCOUT_HOST: ""
  BLOCKSCOUT_PROTOCOL: ""
  CACHE_ADDRESS_SUM_PERIOD: "3600"
  CACHE_ADDRESS_TOKEN_TRANSFERS_COUNTER_PERIOD: "1800"
  CACHE_ADDRESS_TOKENS_USD_SUM_PERIOD: "3600"
  CACHE_ADDRESS_TRANSACTIONS_COUNTER_PERIOD: "1800"
  CACHE_ADDRESS_TRANSACTIONS_GAS_USAGE_COUNTER_PERIOD: "1800"
  CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL: "1800"
  CACHE_AVERAGE_BLOCK_PERIOD: "1800"
  CACHE_BLOCK_COUNT_PERIOD: "7200"
  CACHE_MARKET_HISTORY_PERIOD: "21600"
  CACHE_TOKEN_HOLDERS_COUNTER_PERIOD: "3600"
  CACHE_TOKEN_TRANSFERS_COUNTER_PERIOD: "3600"
  CACHE_TOTAL_GAS_USAGE_PERIOD: "3600"
  CACHE_TXS_COUNT_PERIOD: "7200"
  CHAIN_ID: ""
  CHECKSUM_ADDRESS_HASHES: "true"
  CHECKSUM_FUNCTION: "eth"
  COIN: ""
  COIN_BALANCE_HISTORY_DAYS: "90"
  COIN_NAME: ""
  CONTRACT_MAX_STRING_LENGTH_WITHOUT_TRIMMING: "2040"
  CONTRACT_VERIFICATION_ALLOWED_SOLIDITY_EVM_VERSIONS: "homestead,tangerineWhistle,spuriousDragon,byzantium,constantinople,petersburg,istanbul,berlin,london,paris,shanghai,default"
  CONTRACT_VERIFICATION_ALLOWED_VYPER_EVM_VERSIONS: "byzantium,constantinople,petersburg,istanbul,berlin,paris,shanghai,default"
  DATABASE_URL: "postgresql://postgres:@localhost:5432/blockscout?ssl=false"
  DECODE_NOT_A_CONTRACT_CALLS: "true"
  DISABLE_EXCHANGE_RATES: "true"
  DISABLE_INDEXER: "false"
  DISABLE_REALTIME_INDEXER: "false"
  DISABLE_WEBAPP: "false"
  DISPLAY_TOKEN_ICONS: "false"
  ECTO_USE_SSL: "false"
  EIP_1559_ELASTICITY_MULTIPLIER: "2"
  EMISSION_FORMAT: "DEFAULT"
  ETHEREUM_JSONRPC_DISABLE_ARCHIVE_BALANCES: "false"
  ETHEREUM_JSONRPC_HTTP_URL: "http://astria-evm-service:8545/"
  ETHEREUM_JSONRPC_TRACE_URL: "http://astria-evm-service:8545/"
  ETHEREUM_JSONRPC_WS_URL: "ws://astria-evm-service:8546/"
  ETHEREUM_JSONRPC_TRANSPORT: "http"
  ETHEREUM_JSONRPC_VARIANT: "geth"
  EXCHANGE_RATES_COIN: ""
  EXTERNAL_APPS: '[]'
  FETCH_REWARDS_WAY: "trace_block"
  FOOTER_LINK_TO_OTHER_EXPLORERS: "false"
  FOOTER_LOGO: "/images/blockscout_logo.svg"
  FOOTER_OTHER_EXPLORERS: '{}'
  HEART_BEAT_TIMEOUT: "30"
  HIDE_BLOCK_MINER: "false"
  INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER: "false"
  INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: "false"
  INDEXER_DISABLE_TOKEN_INSTANCE_REALTIME_FETCHER: "false"
  INDEXER_DISABLE_TOKEN_INSTANCE_RETRY_FETCHER: "false"
  INDEXER_DISABLE_TOKEN_INSTANCE_SANITIZE_FETCHER: "false"
  IPC_PATH: ""
  JSON_RPC: ""
  LOGO: "/images/blockscout_logo.svg"
  MAINTENANCE_ALERT_MESSAGE: ""
  MAX_SIZE_UNLESS_HIDE_ARRAY: "50"
  MICROSERVICE_ETH_BYTECODE_DB_INTERVAL_BETWEEN_LOOKUPS: "10m"
  MICROSERVICE_SC_VERIFIER_ENABLED: "true"
  MICROSERVICE_SC_VERIFIER_TYPE: "sc_verifier"
  MICROSERVICE_SC_VERIFIER_URL: "http://localhost:8150/"
  MICROSERVICE_SIG_PROVIDER_ENABLED: "true"
  MICROSERVICE_SIG_PROVIDER_URL: "http://localhost:8050/"
  MICROSERVICE_VISUALIZE_SOL2UML_ENABLED: "true"
  MICROSERVICE_VISUALIZE_SOL2UML_URL: "http://localhost:8151/"
  NETWORK: ""
  NETWORK_PATH: "/"
  POOL_SIZE: "90"
  POOL_SIZE_API: "10"
  PORT: "4000"
  RE_CAPTCHA_CLIENT_KEY: ""
  RE_CAPTCHA_DISABLED: "false"
  RE_CAPTCHA_SECRET_KEY: ""
  RE_CAPTCHA_V3_CLIENT_KEY: ""
  RE_CAPTCHA_V3_SECRET_KEY: ""
  RELEASE_LINK: ""
  SHOW_ADDRESS_MARKETCAP_PERCENTAGE: "true"
  SHOW_MAINTENANCE_ALERT: "false"
  SHOW_PRICE_CHART: "false"
  SHOW_PRICE_CHART_LEGEND: "false"
  SHOW_TENDERLY_LINK: "false"
  SHOW_TXS_CHART: "true"
  SOURCIFY_INTEGRATION_ENABLED: "false"
  SOURCIFY_REPO_URL: ""
  SOURCIFY_SERVER_URL: ""
  SUBNETWORK: "Awesome chain"
  SUPPORTED_CHAINS: '{}'
  TENDERLY_CHAIN_PATH: ""
  TOKEN_METADATA_UPDATE_INTERVAL: "172800"
  TXS_HISTORIAN_INIT_LAG: "0"
  TXS_STATS_DAYS_TO_COMPILE_AT_INIT: "10"
  TXS_STATS_ENABLED: "true"
  UNCLES_IN_AVERAGE_BLOCK_TIME: "false"
---
# Source: rollup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: astria-smart-contract-verifier-env
  namespace: astria-dev-cluster
data:
  SMART_CONTRACT_VERIFIER__JAEGER__AGENT_ENDPOINT: "localhost:6831"
  SMART_CONTRACT_VERIFIER__JAEGER__ENABLED: "false"
  SMART_CONTRACT_VERIFIER__METRICS__ADDR: "0.0.0.0:6060"
  SMART_CONTRACT_VERIFIER__METRICS__ENABLED: "false"
  SMART_CONTRACT_VERIFIER__METRICS__ROUTE: "/metrics"
  SMART_CONTRACT_VERIFIER__SERVER__GRPC__ADDR: "0.0.0.0:8151"
  SMART_CONTRACT_VERIFIER__SERVER__GRPC__ENABLED: "false"
  SMART_CONTRACT_VERIFIER__SERVER__HTTP__ADDR: "0.0.0.0:8150"
  SMART_CONTRACT_VERIFIER__SERVER__HTTP__ENABLED: "true"
  SMART_CONTRACT_VERIFIER__SERVER__HTTP__MAX_BODY_SIZE: "2097152"
  SMART_CONTRACT_VERIFIER__SOLIDITY__COMPILERS_DIR: "/tmp/solidity-compilers"
  SMART_CONTRACT_VERIFIER__SOLIDITY__ENABLED: "true"
  SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL: "https://solc-bin.ethereum.org/linux-amd64/list.json"
  SMART_CONTRACT_VERIFIER__SOLIDITY__REFRESH_VERSIONS_SCHEDULE: "0 0 * * * * *"
  SMART_CONTRACT_VERIFIER__SOURCIFY__API_URL: "https://sourcify.dev/server/"
  SMART_CONTRACT_VERIFIER__SOURCIFY__ENABLED: "true"
  SMART_CONTRACT_VERIFIER__SOURCIFY__REQUEST_TIMEOUT: "10"
  SMART_CONTRACT_VERIFIER__SOURCIFY__VERIFICATION_ATTEMPTS: "3"
  SMART_CONTRACT_VERIFIER__VYPER__COMPILERS_DIR: "/tmp/vyper-compilers"
  SMART_CONTRACT_VERIFIER__VYPER__ENABLED: "true"
  SMART_CONTRACT_VERIFIER__VYPER__FETCHER__LIST__LIST_URL: "https://raw.githubusercontent.com/blockscout/solc-bin/main/vyper.list.json"
  SMART_CONTRACT_VERIFIER__VYPER__REFRESH_VERSIONS_SCHEDULE: "0 0 * * * * *"
---
# Source: rollup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: astria-dev-cluster
  name: astria-visualizer-env
data:
  VISUALIZER__SERVER__GRPC__ENABLED: "false"
  VISUALIZER__SERVER__HTTP__ADDR: "0.0.0.0:8151"
---
# Source: rollup/templates/storageclasses.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: astria-blockscout-postgres-storage-local
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
# Source: rollup/templates/storageclasses.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: astria-blockscout-redis-storage-local
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
# Source: rollup/templates/storageclasses.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: astria-executor-storage-local
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
# Source: rollup/templates/volumes.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: astria-blockscout-postgres-pv
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: astria-blockscout-postgres-storage-local
  local:
    path: /data/rollup-data/blockscout/postgres
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - astria-dev-cluster-control-plane
---
# Source: rollup/templates/volumes.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: astria-blockscout-redis-pv
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: astria-blockscout-redis-storage-local
  local:
    path: /data/rollup-data/blockscout/redis
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - astria-dev-cluster-control-plane
---
# Source: rollup/templates/volumes.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: astria-executor-pv
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: astria-executor-storage-local
  local:
    path: /data/rollup-data/executor
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - astria-dev-cluster-control-plane
---
# Source: rollup/templates/volumes.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: astria-blockscout-postgres-pvc
  namespace: astria-dev-cluster
  labels:
    "app.kubernetes.io/name": "astria-rollup"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": rollup-0.1.0
spec:
  storageClassName: "astria-blockscout-postgres-storage-local"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
# Source: rollup/templates/volumes.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: astria-blockscout-redis-pvc
  namespace: astria-dev-cluster
  labels:
    "app.kubernetes.io/name": "astria-rollup"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": rollup-0.1.0
spec:
  storageClassName: "astria-blockscout-redis-storage-local"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
# Source: rollup/templates/volumes.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: astria-executor-pvc
  namespace: astria-dev-cluster
  labels:
    "app.kubernetes.io/name": "astria-rollup"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": rollup-0.1.0
spec:
  storageClassName: "astria-executor-storage-local"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
# Source: rollup/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: astria-evm-service
  namespace: astria-dev-cluster
spec:
  selector:
    app: astria-astria-dev-cluster
  ports:
    - name: json-rpc-svc
      port: 8545
      targetPort: json-rpc
    - name: ws-rpc-svc
      port: 8546
      targetPort: ws-rpc
    - name: gossipnet-svc
      port: 2451
      targetPort: gossipnet
---
# Source: rollup/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: astria-faucet-service
  namespace: astria-dev-cluster
spec:
  selector:
    app: astria-astria-dev-cluster
  ports:
    - name: faucet-svc
      port: 8080
      targetPort: faucet
---
# Source: rollup/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: astria-blockscout-svc
  namespace: astria-dev-cluster
spec:
  selector:
    app: astria-astria-dev-cluster
  ports:
    - name: blockscout-svc
      port: 4000
      targetPort: blockscout
---
# Source: rollup/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: astria-geth
  labels:
    app: astria-astria-dev-cluster
  namespace: astria-dev-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: astria-astria-dev-cluster
  template:
    metadata:
      name: astria-execution-chain
      labels:
        app: astria-astria-dev-cluster
    spec:
      initContainers:
        - name: init-geth
          command: [ "/scripts/init-geth.sh" ]
          image: "ghcr.io/astriaorg/go-ethereum:0.2.0"
          volumeMounts:
            - mountPath: /scripts/
              name: astria-executor-scripts-volume
            - mountPath: /home/geth
              name: astria-executor-home-vol
          envFrom:
            - configMapRef:
                name: astria-geth-env
      containers:
        - name: geth
          command: [ "/scripts/start-geth.sh" ]
          image: "ghcr.io/astriaorg/go-ethereum:0.2.0"
          volumeMounts:
            - mountPath: /scripts/
              name: astria-executor-scripts-volume
              readOnly: true
            - mountPath: /home/geth
              name: astria-executor-home-vol
          envFrom:
            - configMapRef:
                name: astria-geth-env
          ports:
            - containerPort: 8545
              name: json-rpc
            - containerPort: 8546
              name: ws-rpc
            - containerPort: 50051
              name: execution-grpc
        - name: composer
          image: "ghcr.io/astriaorg/composer:0.1.0--composer"
          command: [ "/usr/local/bin/astria-composer" ]
          stdin: true
          tty: true
          envFrom:
            - configMapRef:
                name: astria-composer-env
        - name: conductor
          image: "ghcr.io/astriaorg/conductor:0.4.0--conductor"
          command: [ "/scripts/start-conductor.sh" ]
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /scripts/
              name: astria-conductor-scripts-volume
              readOnly: true
          envFrom:
            - configMapRef:
                name: astria-conductor-env
          ports:
            - containerPort: 2451
              name: gossipnet
      volumes:
        - name: astria-executor-scripts-volume
          configMap:
            name: astria-executor-scripts
            defaultMode: 0500
        - name: astria-conductor-scripts-volume
          configMap:
            name: astria-conductor-scripts
            defaultMode: 0500
        - name: astria-executor-home-vol
          persistentVolumeClaim:
            claimName: astria-executor-pvc
---
# Source: rollup/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: astria-faucet
  labels:
    app: astria-astria-dev-cluster
  namespace: astria-dev-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: astria-astria-dev-cluster
  template:
    metadata:
      name: astria-faucet
      labels:
        app: astria-astria-dev-cluster
    spec:
      containers:
        - name: faucet
          command: [ "/app/eth-faucet" ]
          args:
            - -httpport=8080
            - -wallet.provider=http://astria-evm-service:8545
            - -wallet.privkey=8b3a7999072c9c9314c084044fe705db11714c6c4ed7cddb64da18ea270dd203
          image: "ghcr.io/astriaorg/ria-faucet:0.0.1"
          volumeMounts:
            - mountPath: /home/faucet
              name: astria-faucet-home-vol
          ports:
            - containerPort: 8080
              name: faucet
      volumes:
        - emptyDir: { }
          name: astria-faucet-home-vol
---
# Source: rollup/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: astria-blockscout
  labels:
    app: astria-astria-dev-cluster
  namespace: astria-dev-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: astria-astria-dev-cluster
  template:
    metadata:
      name: astria-blockscout-local
      labels:
        app: astria-astria-dev-cluster
    spec:
      containers:
        - name: blockscout
          command: ["bash"]
          args:
            - -c
            - bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()" && bin/blockscout start
          image: "docker.io/blockscout/blockscout:5.1.0"
          volumeMounts:
            - mountPath: /app/logs
              name: astria-blockscout-logs-vol
          envFrom:
            - configMapRef:
                name: astria-blockscout-env
          ports:
            - containerPort: 4000
              name: blockscout
        - name: postgres
          command: ["docker-entrypoint.sh"]
          args:
            - -c
            - max_connections=200
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              value: postgres
          image: docker.io/library/postgres:14
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: astria-blockscout-postgres-vol
        - name: redis
          command: ["redis-server"]
          image: docker.io/library/redis:alpine
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: astria-blockscout-redis-vol
        - name: sig-provider
          image: ghcr.io/blockscout/sig-provider:latest@sha256:ae371ce8d0a20993bf61ca81b3394416f4778c9edd398250fd4d81a8d6820950
          ports:
            - containerPort: 8050
        - name: smart-contract-verifier
          image: ghcr.io/blockscout/smart-contract-verifier:v1.3.0@sha256:f07b2d874c28d45f5ba81f297c868a746a03771e8b6d9b8e96f0eba0beeb1016
          envFrom:
            - configMapRef:
                name: astria-smart-contract-verifier-env
          ports:
            - containerPort: 8150
        - name: visualizer
          image: ghcr.io/blockscout/visualizer:v0.2.0@sha256:99479da126248e0aba5c32b1e32625f8c527b72924f55cb510b50e5f854b2d15
          envFrom:
            - configMapRef:
                name: astria-visualizer-env
          ports:
            - containerPort: 8151
      volumes:
        - emptyDir: {}
          name: astria-blockscout-logs-vol
        - name: astria-blockscout-postgres-vol
          persistentVolumeClaim:
            claimName: astria-blockscout-postgres-pvc
        - name: astria-blockscout-redis-vol
          persistentVolumeClaim:
            claimName: astria-blockscout-redis-pvc
---
# Source: rollup/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: astria-ingress
  namespace: astria-dev-cluster
spec:
  rules:
    - host: executor.astria.localdev.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: astria-evm-service
                port:
                  name: json-rpc-svc
    - host: ws-executor.astria.localdev.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: astria-evm-service
                port:
                  name: ws-rpc-svc
    - host: faucet.astria.localdev.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: astria-faucet-service
                port:
                  name: faucet-svc
    - host: blockscout.astria.localdev.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: astria-blockscout-svc
                port:
                  name: blockscout-svc

